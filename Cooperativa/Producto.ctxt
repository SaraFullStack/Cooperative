#BlueJ class context
comment0.target=Producto
comment1.params=tipoProducto\ hectareas
comment1.target=Producto(TipoProducto,\ double)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Producto.\r\n\r\n\ @param\ tipoProducto\ El\ tipo\ de\ producto.\r\n\ @param\ hectareas\ \ \ \ Las\ hect\u00E1reas\ del\ producto.\r\n
comment10.params=fecha
comment10.target=double\ getPrecioIVA(java.time.LocalDate)
comment10.text=\r\n\ Devuelve\ el\ precio\ del\ producto\ con\ el\ IVA\ incluido\ para\ una\ fecha\r\n\ especificada.\r\n\r\n\ @param\ fecha\ La\ fecha\ para\ la\ cual\ se\ obtendr\u00E1\ el\ precio\ con\ IVA.\r\n\ @return\ El\ precio\ del\ producto\ con\ IVA.\r\n
comment11.params=
comment11.target=int\ getCantidad()
comment11.text=\r\n\ Devuelve\ la\ cantidad\ de\ productos\ bas\u00E1ndose\ en\ las\ hect\u00E1reas\ y\ el\ rendimiento\r\n\ por\ hect\u00E1rea.\r\n\r\n\ @return\ La\ cantidad\ de\ productos.\r\n
comment12.params=
comment12.target=double\ getPesoTotal()
comment12.text=\r\n\ Devuelve\ el\ peso\ total\ de\ los\ productos.\r\n\r\n\ @return\ El\ peso\ total\ de\ los\ productos.\r\n
comment13.params=
comment13.target=double\ getHectareas()
comment13.text=\r\n\ Devuelve\ las\ hect\u00E1reas\ del\ producto.\r\n\r\n\ @return\ Las\ hect\u00E1reas\ del\ producto.\r\n
comment2.params=hectareasTotales
comment2.target=java.util.List\ crearProductos(double)
comment2.text=\r\n\ Crea\ una\ lista\ de\ productos\ a\ partir\ de\ las\ hect\u00E1reas\ totales\ disponibles.\r\n\r\n\ @param\ hectareasTotales\ Las\ hect\u00E1reas\ totales\ disponibles.\r\n\ @return\ La\ lista\ de\ productos\ creados.\r\n
comment3.params=hectareasTotales
comment3.target=double\ validarHectareas(double)
comment3.text=\r\n\ Valida\ el\ n\u00FAmero\ de\ hect\u00E1reas\ ingresado\ por\ el\ usuario.\r\n\r\n\ @param\ hectareasTotales\ Las\ hect\u00E1reas\ totales\ disponibles.\r\n\ @return\ Las\ hect\u00E1reas\ v\u00E1lidas\ ingresadas\ por\ el\ usuario.\r\n
comment4.params=productos
comment4.target=void\ imprimirTodos(java.util.List)
comment4.text=\r\n\ Imprime\ todos\ los\ productos\ de\ la\ lista.\r\n\r\n\ @param\ productos\ La\ lista\ de\ productos\ a\ imprimir.\r\n
comment5.params=producto
comment5.target=void\ imprimirElemento(Producto)
comment5.text=\r\n\ Imprime\ los\ atributos\ de\ un\ producto.\r\n\r\n\ @param\ producto\ El\ producto\ a\ imprimir.\r\n
comment6.params=producto\ precio
comment6.target=void\ actualizarPrecio(Producto,\ double)
comment6.text=\r\n\ Actualiza\ el\ precio\ de\ un\ producto\ en\ la\ tabla\ de\ precios.\r\n\r\n\ @param\ producto\ El\ producto\ cuyo\ precio\ se\ actualizar\u00E1.\r\n\ @param\ precio\ \ \ El\ nuevo\ precio\ del\ producto.\r\n
comment7.params=productores
comment7.target=java.util.List\ extraerProductos(java.util.List)
comment7.text=\r\n\ Extrae\ todos\ los\ productos\ de\ todos\ los\ productores.\r\n\ \r\n\ @return\ Una\ lista\ de\ todos\ los\ productos.\r\n
comment8.params=
comment8.target=TipoProducto\ getTipoProducto()
comment8.text=\r\n\ Devuelve\ el\ tipo\ de\ producto.\r\n\r\n\ @return\ El\ tipo\ de\ producto.\r\n
comment9.params=fecha
comment9.target=double\ getPrecio(java.time.LocalDate)
comment9.text=\r\n\ Devuelve\ el\ precio\ del\ producto\ para\ una\ fecha\ especificada.\r\n\r\n\ @param\ fecha\ La\ fecha\ para\ la\ cual\ se\ obtendr\u00E1\ el\ precio.\r\n\ @return\ El\ precio\ del\ producto.\r\n
numComments=14
